
# podman exec -it haproxy /bin/bash
bash-4.2$ cat /etc/haproxy/haproxy.cfg
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2
    pidfile     /var/lib/haproxy/haproxy.pid
    maxconn     4000
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
    default-server          init-addr last,libc,none

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
    bind *:80
    bind *:443 ssl crt /usr/local/etc/haproxy/certs/mycert.pem

    acl is_kibana hdr(host) -i elk-04.midominio.com
    acl is_stats hdr(host) -i dkr-elk-hc01.midominio.com

    use_backend kibana_backend if is_kibana
    use_backend stats_backend if is_stats

    default_backend app_backend

#---------------------------------------------------------------------
# backend for Kibana
#---------------------------------------------------------------------
backend kibana_backend
    server kibana kibana:5601 ssl verify none check

#---------------------------------------------------------------------
# backend for statistics
#---------------------------------------------------------------------
backend stats_backend
    stats enable
    stats uri /haproxy-stats

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
#backend app_backend
#    balance roundrobin
#    server app1 router.default.svc.cluster.local:80 check
#    server app2 127.0.0.1:5002 check
#    server app3 127.0.0.1:5003 check
#    server app4 127.0.0.1:5004 check


[root@dkr-elk-hc01 ~]# cat  /root/haproxy/haproxy-compose.yml
version: '3'

services:
  haproxy:
   container_name: haproxy
   image: registry.connect.redhat.com/haproxytech/haproxy
   hostname: haproxy
   networks:
     lan_elastic:
       aliases:
         - haproxy
   dns:
     - 10.89.0.1
   ports:
     - "80:80/tcp"
     - "443:443/tcp"
   group: "podman"
   environment:
     - CERT_NAME=xxxxxxxxxxxxxx
     - CERT_KEY=xxxxxxxxxxxxxxx

networks:
  lan_elastic:
    driver: bridge


# podman exec -it haproxy /bin/bash
bash-4.2$ cat /etc/resolv.conf
search dns.podman
nameserver 10.89.2.1

bash-4.2$ id
uid=10001(haproxy) gid=998(haproxy) groups=998(haproxy),0(root)

[WARNING] 053/224252 (1) : parsing [/etc/haproxy/haproxy.cfg:52] : 'server kibana' : could not resolve address 'kibana', disabling server.
[WARNING] 053/224252 (1) : parsing [/etc/haproxy/haproxy.cfg:66] : 'server app1' : could not resolve address 'webserver1', disabling server.

