input {
  file {
    path => "/logstash01/data/*.csv"
    type => "csv"
  }

  file {
    path => "/logstash01/data/*.log"
    type => "log"
  }
}

filter {
  if [type] == "csv" {
    # Configuración específica para archivos CSV
    csv {
      separator => ","
      autodetect_column_names => true
    }

  } else if [type] == "log" {
    # Configuración específica para archivos de registro (log)
    if [message] =~ "sequenceId" {
      # Synology
      grok {
        match => { "message" => '<%{POSINT:syslog_pri}>%{INT:version} %{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:hostname} %{DATA:syslog_program} - - (?:\[.+sequenceId="%{POSINT:message_id}"])? %{GREEDYDATA:log_message}' }
        add_field => [ "source", "%{hostname}" ]
      }
      syslog_pri { }
    } else if [message] =~ "GET /" {
      # Filtro para logs de IIS (ejemplo)
      grok {
        match => { "message" => "%{IP:client_ip} %{USER:username} %{HTTPDATE:timestamp} %{WORD:http_verb} %{URIPATH:uri_path} %{NOTSPACE:http_version} %{NUMBER:http_status} %{NUMBER:response_size}" }
        add_field => [ "[host][name]", "IIS" ]
        add_field => [ "log_message", "%{message}" ]
      }
    } else if [message] =~ "EventCode=" {
      # Filtro para logs del sistema operativo de Windows (ejemplo)
      grok {
        match => { "message" => "EventCode=%{NUMBER:event_code} %{GREEDYDATA:log_message}" }
        add_field => [ "[host][name]", "Windows" ]
      }
    } else {
      # Otros registros syslog
      grok {
        match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:hostname} %{DATA:program}(?:\[%{POSINT:pid}\])?: %{GREEDYDATA:log_message}" }
        add_field => [ "source", "%{hostname}" ]
      }
      date {
        match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        target => "timestamp"
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["https://elasticsearch:9200"]
    ssl => true
    ssl_certificate_verification => true
    cacert => '/etc/logstash/config/certs/ca/ca.crt'
    user => "${ELASTICSEARCH_USERNAME}"
    password => "${ELASTICSEARCH_PASSWORD}"
  }
}
